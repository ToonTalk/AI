My first attempt to teach children to use chatbots to create apps
Ken Kahn


From 20 December 2023 through 17 January 2024 (5 sessions) I taught an online class to 7 Indian students. All of the students had some programming experience. (I don’t believe that is a prerequisite but those are the ones who signed up for the course.) We met each time for between an hour and an hour and a half. Here are the slides I used.


The first session was mostly a lecture by me but the following sessions were largely the students presenting the apps they made in the previous week. They also presented the logs of their conversations. I encouraged them to reflect on their experiences. They asked many good questions. I did include a brief introduction to how chatbots work.
The student projects
Yuraj, a 14 year old boy, initially preferred Python (which I discouraged but didn’t forbid) and built a financial tracker where you can enter accounts, loans, and the like in a text-based interface. He later made a web-based implementation with a nice interface (his LinkedIn post). He later built a web-based carbon emissions calculator (LinkedIn post). His projects can be found here.


Saanvi, a 9 year old girl, first built a flowering collecting game. Flowers (several kinds of emojis) fell from the top of the screen. If you clicked on them they drifted to the basket (another emoji scaled much larger) and the flowers-collected score incremented. However, they didn’t drift to the basket and the flowers-missed score never changed. At my suggestion she was using CodePen to paste the HTML, CSS, and JavaScript. The app contained correct code but it was mixed with older versions of less capable code.


The next week she made a joke generator similar to what I had demoed earlier. She did a good job of incorporating images and sound effects. The app had nice CSS. She then did a Question and Answer app that asked questions that she authored that were about things she had learned in the course. She struggled to get ChatGPT 3.5 to fix a bug that it generated (using “forEach” on an HTML Collection). She did all the right things: copying and pasting the error message and then copying the entire code for ChatGPT 3.5 to consider. I found that ChatGPT 4 was well-aware of this error and could correct her app. Saanvi’s apps can be found here.


Veer, a 13 year old boy, created three apps: a joke generator, a ping pong game, and a canvas drawing app. He explained how the apps work very well (he's been programming since he was 9). His apps can be found here.


Aditja, an 11 year old boy, created a calculator (with advanced operations), a math quiz (broken and abandoned), an asteroid game, and an obstacle jumping game. His apps can be found here.


Ashna, a year 9 girl, created a BMI calculator. Besides reporting one’s BMI it gives advice styled in different colors. Her apps are here.


Marcus, a 12 year old boy, made a carbon footprint calculator. His app had a sign-on dialog with a password. Ten different inputs (3 or 4 he suggested and the rest generated by ChatGPT) include electricity and gas usage, diet, driving, meat consumption, and use of public transport. It remembers your footprint (using the browser’s local storage) so one can track it over time. HIs app can be found here.


Saundarya started the course and made an Indian History app.
Reflections
I was very impressed by both the apps created as well as the students' presentations of how they created the apps. My sense was that the students were enthusiastic and enjoyed the course. I think the students were above average and all had some programming experience. It remains an open question how well average students with no programming skills will do.


I think many found it challenging to do the copy and paste correctly when the chatbot updated some code. They didn’t always add the new code at the correct place and sometimes neglected to remove the old version of some functionality.  ChatGPT 4 can be prompted to completely automate all of this by using Python to create the web page and provide the user with a download link. Unfortunately, currently ChatGPT 4 costs $20/month.


A week before the course completed I presented to the students another way to address this problem. I created a web app I call App Maker. It uses various heuristics to determine where to place new code and what to remove. It also supports incorporating images and sounds in the app if the chatbot has been instructed to provide the expected placeholders for these media files. In the final presentation a student used it to present their work. It is currently being beta tested.
Find out more
I published this paper Programming as a Dialogue with GPT-4 and wrote this draft: Seymour Papert’s Teaching Children Thinking in the Age of Large Language Models.