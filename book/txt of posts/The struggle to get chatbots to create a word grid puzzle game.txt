The struggle to get chatbots to create a word grid puzzle game


Ken Kahn <toontalk@gmail.com> - home page
ChatGPT 3.5 via a Poe bot
When I was giving a demo during my seminar at Hong Kong University I used this Poe Bot. (Here is the video of the seminar.) Direct use of ChatGPT is not available in Hong Kong but Poe is and it uses 3.5 (or 4 for paid members). The bot has this initial prompt that sets up the context for generating web apps with the help of two personas: Ada the programmer and Curio the curious. Here’s the log of the conversation.


It asked about interests and settled on a game of finding words hidden in a grid in any of 8 directions. It quickly generated 100 lines of HTML, CSS, and JavaScript. When I tried it the page never finished loading and a message appeared asking if I wanted to wait or stop the page. Bad news for a demo. 


Much later I discovered that the code that checked if a word can be placed on the grid looked like this


if (newRow < 0 || newRow >= gridSize || newCol < 0 || newCol >= gridSize) || grid[newRow][newCol] !== word[i]) {


Since the grid was initially populated with random letters the chance that the word was already there is vanishingly low. So it just kept trying. Removing the highlighted portion of the condition fixed the problem. Except that sometimes a subsequent word would overwrite a letter from a previous word. Here is the app.
ChatGPT 4 taking over
Later I resumed working on this with ChatGPT 4 and it solved this problem by initializing the grid with a non-letter (-). The conversation with ChatGPT 4 (pdf version) at first went very well. I began by uploading the broken Poe version and explained the problem. I asked for a link to the updated version and it generated the entire file and I could download it and open it. After a while instead of downloading the updated version I received editing instructions. 


I then started a new conversation again starting by uploading the latest version. After some progress I started seeing syntax errors and then errors due to duplicate variable declarations. I should have asked for what edits I should make at this point but instead had a long series of errors. 


I then started a new conversation and this time I copied and pasted the latest version of the source code. ChatGPT’s response was that there was lots of duplicated code. What apparently happened is that the way it generated the download links was to use Python to edit a long text string. After a while bugs in the editing instructions led to new versions of functions and variables added but old versions not removed. In this conversation I frequently pasted the entire code to get editing instructions. After a while a logical bug in the code led ChatGPT to insert logging statements in the code. My job was to run it, copy and paste the log messages, and then do the suggested edits.
Merging two apps
Finally I had a working version. I then in a new conversation uploaded the app and a fireworks app that I co-created with ChatGPT a while ago. I entered “Can take the animated fireworks and add it to the word game when the number of words remaining is 0 and produce a new HTML file”. Its response didn’t have good code for determining that the game was won and fireworks should be started. But it wasn’t hard for it to tell me how to fix this. 
The resulting app
I think the resulting app is pretty good. The grid grows each time one plays again. But creating it was much more painful than it should. Perhaps if I hadn’t asked for links to download after failures began to occur it might have gone smoother.
Redoing it with ChatGPT 4 from the start
I then started over again with GPT 4 instead of GPT 3.5 and it went much much better. Perhaps luck or perhaps starting with code generated by GPT 3.5 was a bad idea. Here is the ChatGPT 4 log (pdf version). And here is the app.